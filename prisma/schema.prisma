// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique @db.VarChar(225)
  name     String @db.VarChar(225)
  password String @db.VarChar(225)
  role     Role   @default(USER)

  Queue Queue[]
  @@map("users")
}

enum Role {
  USER
  SUPER_ADMIN
  LOCKET_ADMIN
}

model Queue {
  id           BigInt    @id @default(autoincrement())
  createdAt    DateTime  @default(dbgenerated("CURRENT_TIMESTAMP")) @db.Timestamp()
  queue_number Int
  status       Status    @default(UNDONE)
  updatedAt    DateTime?
  locket_id    Int
  user_id      Int

  locket Locket @relation(fields: [locket_id], references: [id])
  user User @relation(fields: [user_id], references: [id])

  @@map("queue")
}

model Locket {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(225)
  createdAt DateTime @default(dbgenerated("CURRENT_TIMESTAMP")) @db.Timestamp()

  queue Queue[]

  @@map("lockets")
}

enum Status {
  DONE
  UNDONE
}
